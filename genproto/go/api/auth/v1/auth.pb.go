// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: crwd/api/v1/auth.proto

package authv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Operation defines allowed boolean operations.
type Operation int32

const (
	Operation_OPERATION_UNSPECIFIED Operation = 0
	Operation_OPERATION_AND         Operation = 1
	Operation_OPERATION_OR          Operation = 2
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "OPERATION_UNSPECIFIED",
		1: "OPERATION_AND",
		2: "OPERATION_OR",
	}
	Operation_value = map[string]int32{
		"OPERATION_UNSPECIFIED": 0,
		"OPERATION_AND":         1,
		"OPERATION_OR":          2,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_crwd_api_v1_auth_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_crwd_api_v1_auth_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_crwd_api_v1_auth_proto_rawDescGZIP(), []int{0}
}

// Auth expresses authorization policies for an RPC.
type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Policy:
	//
	//	*Auth_Permission
	//	*Auth_Expression
	Policy isAuth_Policy `protobuf_oneof:"policy"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crwd_api_v1_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_crwd_api_v1_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_crwd_api_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (m *Auth) GetPolicy() isAuth_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (x *Auth) GetPermission() *Permission {
	if x, ok := x.GetPolicy().(*Auth_Permission); ok {
		return x.Permission
	}
	return nil
}

func (x *Auth) GetExpression() *PermissionExpression {
	if x, ok := x.GetPolicy().(*Auth_Expression); ok {
		return x.Expression
	}
	return nil
}

type isAuth_Policy interface {
	isAuth_Policy()
}

type Auth_Permission struct {
	Permission *Permission `protobuf:"bytes,1,opt,name=permission,proto3,oneof"`
}

type Auth_Expression struct {
	Expression *PermissionExpression `protobuf:"bytes,3,opt,name=expression,proto3,oneof"`
}

func (*Auth_Permission) isAuth_Policy() {}

func (*Auth_Expression) isAuth_Policy() {}

// Permission is the building block for expressing authorization.
//
// Example:
//
//	rpc CreateFoo(CreateFooRequest) returns (CreateFooResponse) {
//		option (crwd.api.v1.auth) = {
//			permission: {
//				predicate: "create"
//				resource: "foo"
//			}
//		};
//	};
type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The object, predicate, and subject fields are the types that are being
	// permission checked. For example, can a user subject read a book object?
	Object    string  `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Predicate *string `protobuf:"bytes,2,opt,name=predicate,proto3,oneof" json:"predicate,omitempty"`
	Subject   *string `protobuf:"bytes,3,opt,name=subject,proto3,oneof" json:"subject,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crwd_api_v1_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_crwd_api_v1_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_crwd_api_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *Permission) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *Permission) GetPredicate() string {
	if x != nil && x.Predicate != nil {
		return *x.Predicate
	}
	return ""
}

func (x *Permission) GetSubject() string {
	if x != nil && x.Subject != nil {
		return *x.Subject
	}
	return ""
}

// PermissionExpression allows for boolean operations on policies.
//
// Example:
//
//	option (crwd.api.v1.auth) = {
//		permission_expression: {
//			policies: [
//				{
//					permission: {
//						predicate: "update"
//						resource: "foo"
//					}
//				},
//				{
//					permission: {
//						predicate: "delete"
//						resource: "foo"
//					},
//				}
//			]
//			op: OR
//		}
//	};
type PermissionExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*Auth   `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	Op       Operation `protobuf:"varint,2,opt,name=op,proto3,enum=crwd.api.v1.Operation" json:"op,omitempty"`
}

func (x *PermissionExpression) Reset() {
	*x = PermissionExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crwd_api_v1_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionExpression) ProtoMessage() {}

func (x *PermissionExpression) ProtoReflect() protoreflect.Message {
	mi := &file_crwd_api_v1_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionExpression.ProtoReflect.Descriptor instead.
func (*PermissionExpression) Descriptor() ([]byte, []int) {
	return file_crwd_api_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *PermissionExpression) GetPolicies() []*Auth {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *PermissionExpression) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_OPERATION_UNSPECIFIED
}

var file_crwd_api_v1_auth_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*Auth)(nil),
		Field:         1000,
		Name:          "crwd.api.v1.auth",
		Tag:           "bytes,1000,opt,name=auth",
		Filename:      "crwd/api/v1/auth.proto",
	},
}

// Extension fields to descriptorpb.MethodOptions.
var (
	// optional crwd.api.v1.Auth auth = 1000;
	E_Auth = &file_crwd_api_v1_auth_proto_extTypes[0]
)

var File_crwd_api_v1_auth_proto protoreflect.FileDescriptor

var file_crwd_api_v1_auth_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x72, 0x77, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x72, 0x77, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x39, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x72, 0x77, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x63, 0x72, 0x77, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x80, 0x01, 0x0a, 0x0a, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x21, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x6d, 0x0a,
	0x14, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x77, 0x64, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x63, 0x72, 0x77, 0x64, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x6f, 0x70, 0x2a, 0x4b, 0x0a, 0x09,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45,
	0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x52, 0x10, 0x02, 0x3a, 0x46, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x72, 0x77, 0x64, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x43, 0x72, 0x6f, 0x77, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x2f, 0x63, 0x72, 0x77, 0x64,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x74,
	0x68, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crwd_api_v1_auth_proto_rawDescOnce sync.Once
	file_crwd_api_v1_auth_proto_rawDescData = file_crwd_api_v1_auth_proto_rawDesc
)

func file_crwd_api_v1_auth_proto_rawDescGZIP() []byte {
	file_crwd_api_v1_auth_proto_rawDescOnce.Do(func() {
		file_crwd_api_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_crwd_api_v1_auth_proto_rawDescData)
	})
	return file_crwd_api_v1_auth_proto_rawDescData
}

var file_crwd_api_v1_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_crwd_api_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_crwd_api_v1_auth_proto_goTypes = []interface{}{
	(Operation)(0),                     // 0: crwd.api.v1.Operation
	(*Auth)(nil),                       // 1: crwd.api.v1.Auth
	(*Permission)(nil),                 // 2: crwd.api.v1.Permission
	(*PermissionExpression)(nil),       // 3: crwd.api.v1.PermissionExpression
	(*descriptorpb.MethodOptions)(nil), // 4: google.protobuf.MethodOptions
}
var file_crwd_api_v1_auth_proto_depIdxs = []int32{
	2, // 0: crwd.api.v1.Auth.permission:type_name -> crwd.api.v1.Permission
	3, // 1: crwd.api.v1.Auth.expression:type_name -> crwd.api.v1.PermissionExpression
	1, // 2: crwd.api.v1.PermissionExpression.policies:type_name -> crwd.api.v1.Auth
	0, // 3: crwd.api.v1.PermissionExpression.op:type_name -> crwd.api.v1.Operation
	4, // 4: crwd.api.v1.auth:extendee -> google.protobuf.MethodOptions
	1, // 5: crwd.api.v1.auth:type_name -> crwd.api.v1.Auth
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	5, // [5:6] is the sub-list for extension type_name
	4, // [4:5] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_crwd_api_v1_auth_proto_init() }
func file_crwd_api_v1_auth_proto_init() {
	if File_crwd_api_v1_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crwd_api_v1_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crwd_api_v1_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crwd_api_v1_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_crwd_api_v1_auth_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Auth_Permission)(nil),
		(*Auth_Expression)(nil),
	}
	file_crwd_api_v1_auth_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crwd_api_v1_auth_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_crwd_api_v1_auth_proto_goTypes,
		DependencyIndexes: file_crwd_api_v1_auth_proto_depIdxs,
		EnumInfos:         file_crwd_api_v1_auth_proto_enumTypes,
		MessageInfos:      file_crwd_api_v1_auth_proto_msgTypes,
		ExtensionInfos:    file_crwd_api_v1_auth_proto_extTypes,
	}.Build()
	File_crwd_api_v1_auth_proto = out.File
	file_crwd_api_v1_auth_proto_rawDesc = nil
	file_crwd_api_v1_auth_proto_goTypes = nil
	file_crwd_api_v1_auth_proto_depIdxs = nil
}
